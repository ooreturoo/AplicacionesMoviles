// Generated by view binder compiler. Do not edit!
package com.example.practicaspropias.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.practicaspropias.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySignUpBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText signUpMail;

  @NonNull
  public final EditText signUpPass;

  @NonNull
  public final EditText signUpPassConfirm;

  @NonNull
  public final Button signUpSendButton;

  @NonNull
  public final TextView signUpTitle;

  @NonNull
  public final EditText signUpUser;

  private ActivitySignUpBinding(@NonNull ConstraintLayout rootView, @NonNull EditText signUpMail,
      @NonNull EditText signUpPass, @NonNull EditText signUpPassConfirm,
      @NonNull Button signUpSendButton, @NonNull TextView signUpTitle,
      @NonNull EditText signUpUser) {
    this.rootView = rootView;
    this.signUpMail = signUpMail;
    this.signUpPass = signUpPass;
    this.signUpPassConfirm = signUpPassConfirm;
    this.signUpSendButton = signUpSendButton;
    this.signUpTitle = signUpTitle;
    this.signUpUser = signUpUser;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySignUpBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySignUpBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_sign_up, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySignUpBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.signUpMail;
      EditText signUpMail = ViewBindings.findChildViewById(rootView, id);
      if (signUpMail == null) {
        break missingId;
      }

      id = R.id.signUpPass;
      EditText signUpPass = ViewBindings.findChildViewById(rootView, id);
      if (signUpPass == null) {
        break missingId;
      }

      id = R.id.signUpPassConfirm;
      EditText signUpPassConfirm = ViewBindings.findChildViewById(rootView, id);
      if (signUpPassConfirm == null) {
        break missingId;
      }

      id = R.id.signUpSendButton;
      Button signUpSendButton = ViewBindings.findChildViewById(rootView, id);
      if (signUpSendButton == null) {
        break missingId;
      }

      id = R.id.signUpTitle;
      TextView signUpTitle = ViewBindings.findChildViewById(rootView, id);
      if (signUpTitle == null) {
        break missingId;
      }

      id = R.id.signUpUser;
      EditText signUpUser = ViewBindings.findChildViewById(rootView, id);
      if (signUpUser == null) {
        break missingId;
      }

      return new ActivitySignUpBinding((ConstraintLayout) rootView, signUpMail, signUpPass,
          signUpPassConfirm, signUpSendButton, signUpTitle, signUpUser);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
